plugins {
    id 'org.springframework.boot' version '3.0.0' apply false
    id 'io.spring.dependency-management' version '1.1.0' apply false
    id 'jacoco'
    id 'jacoco-report-aggregation'
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    implementation project(':common')
    implementation project(':user')
    implementation project(':resume')
    implementation project(':admin')
    implementation project(':vip')
    implementation project(':order')
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    group = 'com.xzgedu.supercv'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        // Spring boot web starter including logback slf4j...
        implementation 'org.springframework.boot:spring-boot-starter-web'

        // MySQL
        implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.0'
        runtimeOnly 'com.mysql:mysql-connector-j'

        // Lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        // Testing
//        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        implementation 'org.springframework.boot:spring-boot-starter-test'

        // H2 Database (for in-memory testing)
        runtimeOnly 'com.h2database:h2'

        // Druid
        implementation 'com.alibaba:druid-spring-boot-3-starter:1.2.23'

        // commons-lang3, include StringUtils
        implementation 'org.apache.commons:commons-lang3:3.12.0'

        // Api Doc
        implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

        // Ali Sms client
        implementation 'com.aliyun:dysmsapi20170525:2.0.23'
        implementation 'xerces:xercesImpl:2.12.2'

        // Tencent Captcha
        implementation 'com.tencentcloudapi:tencentcloud-sdk-java-captcha:3.1.754'

        // fastjson
        implementation 'com.alibaba.fastjson2:fastjson2:2.0.20'
        implementation 'com.alibaba.fastjson2:fastjson2-extension:2.0.20'

        // commons-lang3, include StringUtils
        implementation 'org.apache.commons:commons-lang3:3.12.0'
    }

    tasks.named('test') {
        useJUnitPlatform()
        finalizedBy jacocoTestReport // report is always generated after tests run
    }

    jacocoTestReport {
        dependsOn test
        reports {
            xml.required = false
            csv.required = false
            html
        }
    }
}

// 输出结果在 build/reports/jacoco/testCodeCoverageReport/html/index.html
tasks.named('check') {
    // make JaCoCo aggregate report generation part of the 'check' lifecycle phase
    dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}